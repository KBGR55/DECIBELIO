name: 50 DAST Scan Docker Image

on:
  workflow_dispatch:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

  workflow_call:
    inputs:
      image-tag:
        type: string
        description: 'The name of the docker image to scan'
        required: true

env:
  REGISTRY: ghcr.io
  APP_PORT: 9080

jobs:
  dast-scan:
    name: DAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Validate IMAGE_TAG input
        run: |
          if [ -z "${{ inputs.image-tag }}" ]; then
            echo "Error: IMAGE_TAG input is empty."
            exit 1
          fi
          echo "IMAGE_TAG=${{ inputs.image-tag }}" >> $GITHUB_ENV

      - name: Start demo app container
        run: |
          docker rm demoApp || true
          docker run -d -p ${{ env.APP_PORT }}:9080 --name demoApp ${{ inputs.image-tag }}

      - name: Wait for container to start
        run: |
          echo "Waiting for container to be ready on port ${{ env.APP_PORT }}..."
          timeout 600 bash -c 'while [[ "$(curl -s -o /dev/null -w "%{http_code}" http://localhost:${{ env.APP_PORT }})" != "200" ]]; do sleep 5; done' || { echo "Container not ready after 600 seconds."; docker logs demoApp; exit 1; }

      - name: Test container health endpoint
        run: |
          echo "Testing application health..."
          curl -v http://localhost:${{ env.APP_PORT }}/health || { echo "Health check failed"; exit 1; }

      - name: Pull and Run ZAP
        run: |
          echo "Running OWASP ZAP scan..."
          docker run --rm -v $(pwd):/zap/wrk/:rw owasp/zap2docker-weekly zap-full-scan.py \
          -t http://localhost:${{ env.APP_PORT }} -r /zap/wrk/zap_report.html || true

      - name: Verify if ZAP report was generated
        run: |
          if [ -f "zap_report.html" ]; then
            echo "ZAP report successfully generated."
          elif [ -f "/zap/wrk/zap_report.html" ]; then
            echo "ZAP report found in /zap/wrk/. Moving it..."
            mv /zap/wrk/zap_report.html .
          else
            echo "ERROR: ZAP report was not generated!"
            exit 1
          fi

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: DAST_Report
          path: zap_report.html

      - name: Stop and clean up Docker container
        if: always()
        run: |
          docker stop demoApp && docker rm demoApp
          docker container prune --force
          docker image prune --force
