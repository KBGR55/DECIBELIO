name: 04 SAST

on:
  workflow_dispatch:
  workflow_call:

jobs:
  SAST-CodeQL:
    name: Build and SAST CodeQL
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ "java" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build Java project with Maven
        run: |
          cd decibelio
          mvn clean package -B -Dmaven.test.skip

      - name: Cache build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-target

      - name: Cache m2
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/**/*.jar
          key: ${{ runner.os }}-m2

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: ${{ github.workspace }}/target

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{ matrix.language }}"

  spotbugs:
    name: SAST SpotBugs
    needs: [SAST-CodeQL]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Spotbugs action
        uses: jmservera/spotbugs-github-action@v0.1.0-alpha
        with:
          packages: com.example.-
          target: ./target
          dependenciesPath: ~/.m2
          basePath: src/main/java

      - name: Upload Spotbugs report
        uses: actions/upload-artifact@v3
        with:
          name: spotbugs-sarif
          path: ${{github.workspace}}/results.sarif

      - name: Upload Analysis Results
        if: always()
        uses: github/codeql-action/upload-sarif@v2.1.28
        with:
          sarif_file: ${{github.workspace}}/results.sarif

  sonarqube:
    name: Analyze with SonarQube
    needs: [SAST-CodeQL]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17 for Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Java project
        run: ./mvnw clean install -f ./decibelio/pom.xml

      - name: Analyze Java project with SonarQube
        uses: SonarSource/sonarqube-scan-action@v2.0.1
        with:
          projectBaseDir: ./decibelio
          args: >
            -Dsonar.organization=my-org
            -Dsonar.projectKey=my-Java-web-app
            -Dsonar.java.binaries=./decibelio/target/classes
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_PROJECT_KEY: ${{ vars.SONAR_PROJECT_KEY }}

      - name: Analyze Flutter project with SonarQube
        run: |
          cd decibelio_app_web
          flutter pub get
          sonar-scanner \
            -Dsonar.projectKey=decibelio_flutter \
            -Dsonar.sources=lib \
            -Dsonar.host.url=${{ vars.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}